# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.120.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Get Organization Repository Names
        uses : austenstone/get-org-repos@v3.1
        with:
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          org: "HITSZ-OpenAuto"
          delimiter: "\n"
        id: get-org-repos

      - name: Turn To Array
        id: modified_files_list
        uses: lucaspinheirogit/list-from-string-array-action@v1.4.3
        with:
          stringArray: ${{ steps.get-org-repos.outputs.repos }}

      - name: Grep Matched Name
        run: |
          echo "${{ steps.modified_files_list.outputs.stringList }}" > tmp.txt
          cat tmp.txt | grep -E "^-.([A-Z]){2,4}([0-9]){4}.*$" | sed -E 's/^..(.*)$/\1/' > filter.txt
          cat filter.txt
          for line in $(cat filter.txt)
          do
            echo '-------------------------------------------------'
            echo ${line}
            curl "https://raw.githubusercontent.com/HITSZ-OpenAuto/${line}/main/tag.txt" -o "tag_${line}.txt"
            
            echo '-----tag.txt-----'
            cat "tag_${line}.txt"
            echo " "
            echo '-----------------'

            OUT=`cat "tag_${line}.txt" | grep -E "^semester:..*$" | sed -E 's/^semester:.(.*)$/\1/'`
            echo ${OUT}

            case ${OUT} in
              '第一学年秋季')
                semester='fresh/Autumn'
                ;;
              '第一学年春季')
                semester='fresh/Spring'
                ;;
              '第一学年夏季')
                semester='fresh/Summer'
                ;;
              '第二学年秋季')
                semester='sophomore/Autumn'
                ;;
              '第二学年春季')
                semester='sophomore/Spring'
                ;;
              '第二学年夏季')
                semester='sophomore/Summer'
                ;;
              '第三学年秋季')
                semester='junior/Autumn'
                ;;
              '第三学年春季')
                semester='junior/Spring'
                ;;
              '第三学年夏季')
                semester='junior/Summer'
                ;;
              '第四学年秋季')
                semester='senior/Autumn'
                ;;
              '第四学年春季')
                semester='senior/Spring'
                ;;
              '第四学年夏季')
                semester='senior/Summer'
                ;;
              *)
                echo "No match semester"
                continue
                ;;   
            esac
            echo " "       
            echo $semester    

            cat "tag_${line}.txt" | grep -E "^name:..*$" | sed -E 's/^name:.(.*)$/\1/' > "name_${line}.txt"

            echo '---' > "./content/docs/${semester}/${line}.md"
            echo "title: $(cat "name_${line}.txt")" >> "./content/docs/${semester}/${line}.md"
            echo 'weight: 2' >> "./content/docs/${semester}/${line}.md"
            echo '---' >> "./content/docs/${semester}/${line}.md"
            curl "https://raw.githubusercontent.com/HITSZ-OpenAuto/${line}/main/README.md" -o "temp_${line}.md"
            tail -n +2 "temp_${line}.md" >> "./content/docs/${semester}/${line}.md"
          done

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

      - name: Deploy to Cloudflare Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
            PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
            EXTERNAL_REPOSITORY: Huang-Zifeng/hitsz-open-auto.github.io
            PUBLISH_BRANCH: cf-pages
            PUBLISH_DIR: ./public
            commit_message: ${{ github.event.head_commit.message }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
